library(ggplot2)
order<-arrange(wf,Freq)$vc
ggplot(data=wf, aes(x=vc ,y=Freq)) +ylim(0,2500)+geom_col()+coord_flip()+scale_x_discrete(limit=wf$vc)+geom_text(aes(label=Freq),hjust=-0.3)
}
}
g(1)
g1(1)
g1(2)
library(ggplot2)
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wcbar.jpg", width = 1000, height = 1000, quality = 100)
order<-arrange(wf,Freq)$vc
p= ggplot(data=wf, aes(x=vc ,y=Freq)) +ylim(0,2500)+geom_col()+coord_flip()+scale_x_discrete(limit=wf$vc)+geom_text(aes(label=Freq),hjust=-0.3)
print(p);
dev.off();
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wc.jpg", width = 1000, height = 1000, quality = 100)
p=wordcloud(words=wf$vc,
freq = wf$Freq,
min.freq = 1,
max.words = 200,
random.order = F,
color = pal,
scale = c(12,1),
rot.per = 0.1)
print(p);
dev.off();
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wc.jpg", width = 1000, height = 1000, quality = 100)
p=wordcloud(words=wf$vc,
freq = wf$Freq,
min.freq = 1,
max.words = 20,
random.order = F,
color = pal,
scale = c(12,1),
rot.per = 0.1)
print(p);
dev.off();
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wcbar.jpg", width = 1000, height = 1000, quality = 100)
order<-arrange(wf,Freq)$vc
p= ggplot(data=wf, aes(x=vc ,y=Freq)) +ylim(0,250)+geom_col()+coord_flip()+scale_x_discrete(limit=wf$vc)+geom_text(aes(label=Freq),hjust=-0.3)
print(p);
dev.off();
txt <-readLines('hiphop.txt')
head(txt)
txt<- gsub('\\W',' ',txt)
txt<- gsub('[0-9]','',txt)
txt<- gsub('[a-z]','',txt)
txt<- gsub('[A-Z]','',txt)
noun<-extractNoun(txt)
vc <-unlist(noun)
wc<-table(vc)
#데이터에 들어가는데 단순히 String형태로 집어넣고 싶다
wf<-as.data.frame(wc,stringsAsFactors = F)
wf<-filter(wf,nchar(vc)>=2)
wf<-head(wf[order(wf$Freq,decreasing = T),],30)
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wcbar.jpg", width = 1000, height = 1000, quality = 100)
order<-arrange(wf,Freq)$vc
p= ggplot(data=wf, aes(x=vc ,y=Freq)) +ylim(0,250)+geom_col()+coord_flip()+scale_x_discrete(limit=wf$vc)+geom_text(aes(label=Freq),hjust=-0.3)
print(p);
dev.off();
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wcbar.jpg", width = 1000, height = 1000, quality = 100)
order<-arrange(wf,Freq)$vc
p= ggplot(data=wf, aes(x=vc ,y=Freq)) +ylim(0,250)+geom_col()+coord_flip()+scale_x_discrete(limit=order)+geom_text(aes(label=Freq),hjust=-0.3)
print(p);
dev.off();
wc <-function(a){
library(ggplot2);
# R 이미지화 방법
#c:\\rproject\\
if(a==1){
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wc.jpg", width = 1000, height = 1000, quality = 100)
p=wordcloud(words=wf$vc,
freq = wf$Freq,
min.freq = 1,
max.words = 200,
random.order = F,
color = pal,
scale = c(12,1),
rot.per = 0.1)
print(p);
dev.off();
}else if(a==2){
library(ggplot2)
pal <-brewer.pal(8,'Dark2') #Dark2를 통해서 여러가지 색상을 가져온다
set.seed(1234)
jpeg(filename = "wcbar.jpg", width = 1000, height = 1000, quality = 100)
order<-arrange(wf,Freq)$vc
p= ggplot(data=wf, aes(x=vc ,y=Freq)) +ylim(0,250)+geom_col()+coord_flip()+scale_x_discrete(limit=order)+geom_text(aes(label=Freq),hjust=-0.3)
print(p);
dev.off();
}
}
wc(1)
install.packages('ggiraphExtra')
install.packages('stringi')
install.packages("stringi")
install.packages('devtools')
devtools::install_github('cardiomoon/kormaps2014')
library(kormaps2014)
kopop1
library(kormaps2014)
korpop1
changeCode(korpop1)
changeCode(korpop1)
str(changeCode(korpop1))
library(dplyr)
library(dplyr)
kormap1<-rename(kormap1,
pop='총인구_명',
name='행정구역별_읍면동')
kormap1
korpop1
str(changeCode(korpop1))
str(changeCode(korpop1))
kormap1<-rename(korpop1,
pop='총인구_명',
name='행정구역별_읍면동')
str(korpop1)
str(changeCode(korpop1))
library(kormaps2014)
library(dplyr)
ggChoropleth(
data=korpop1,
aes(fill=pop,map_id=code,tooltip=name),
map=kormap1,
interactive=T
)
library(stringi)
ggChoropleth(
data=korpop1,
aes(fill=pop,map_id=code,tooltip=name),
map=kormap1,
interactive=T
)
ggChoropleth
devtools::install_github('cardiomoon/moonbook2')
ggChoropleth(
data=korpop1,
aes(fill=pop,map_id=code,tooltip=name),
map=kormap1,
interactive=T
)
str(changeCode(korpop1))
kormap1<-rename(korpop1,
pop='총인구_명',
name='행정구역별_읍면동')
str(changeCode(korpop1))
ggChoropleth(
data=korpop1,
aes(fill=pop,map_id=code,tooltip=name),
map=kormap1,
interactive=T
)
theme_set(theme_gray(base_family="NanumGothic"))
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
str(changeCode(korpop1))
ggChoropleth(
data=korpop1,
aes(fill=pop,map_id=code,tooltip=name),
map=kormap1,
interactive=T
)
kormap1<-rename(korpop1,
pop='총인구_명',
name='행정구역별_읍면동')
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
theme_set(theme_gray(base_family="NanumGothic"))
install.packages('RgoogleMaps')
library(RgoogleMaps)
mymap <-GetMap(37.501685, 127.039672)
mympa <-GetMap(
center=mycenter,
zoom = 11,
maptype = 'load',
format = 'roadmap',
destfile = 'mymap.jpg'
)
library(RgoogleMaps)
mymap <-GetMap(37.501685, 127.039672)
mympa <-GetMap(
center=mycenter,
zoom = 11,
maptype = 'load',
format = 'roadmap',
destfile = 'mymap.jpg'
)
mymap <-GetMap(37.501685, 127.039672)
mymap <-c(37.501685, 127.039672)
mympa <-GetMap(
center=mycenter,
zoom = 11,
maptype = 'load',
format = 'roadmap',
destfile = 'mymap.jpg'
)
mympa <-GetMap(
center=mycenter,
zoom = 11,
maptype = 'load',
format = 'roadmap',
destfile = 'mymap.jpg'
)
mympa <-GetMap(
center=mymap,
zoom = 11,
maptype = 'road',
format = 'roadmap',
destfile = 'mymap.jpg'
)
mympa
PlotOnStaticMap(mymap,
lat = 37.501685,
lon = 127.039672,
destfile = 'mymap_point.jpg',
cex= 1,pch=10,col='red'
)
mymap <-c(37.501685, 127.039672)
mympa <-GetMap(
center=mymap,
zoom = 11,
maptype = 'road',
destfile = 'mymap.jpg'
)
PlotOnStaticMap(mymap,
lat = 37.501685,
lon = 127.039672,
destfile = 'mymap_point.jpg',
cex= 1,pch=10,col='red'
)
mymap <-c(37.501685, 127.039672)
mympa <-GetMap(
center=mymap,
zoom = 11,
maptype = 'road',
destfile = 'mymap.jpg'
)
PlotOnStaticMap(mymap,
lat = 37.501685,
lon = 127.039672,
destfile = 'mymap_point.jpg',
cex= 1,pch=10,col='red'
)
mycenter = c(37.525083, 127.055982)
mymap <- GetMap(
center=mycenter,
zoom=11,
maptype='road',
format='roadmap',
destfile = 'mymap.jpg'
)
win.graph();
PlotOnStaticMap(mymap,
lat= 37.525083,
lon= 127.055982,
destfile = 'mymap_point.jpg',
cex=1, pch=10,col='red'
)
jpeg(filename = "mypoint.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= 37.525083,
lon= 127.055982,
destfile = 'mymap_point.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
mydata <-data.frame(
a=c(1:5),
lot=c(37.525083,37.525013,37.525023,37.525033,37.525043),
lon=c(127.055952,127.055942,127.055932,127.055922,127.055912)
)
mydata <-data.frame(
a=c(1:5),
lot=c(37.515083,37.525013,37.535023,37.545033,37.555043),
lon=c(127.055952,127.045942,127.035932,127.025922,127.015912)
)
p<-PlotOnStaticMap(mymap,
lat= mydata$lot,
lon= mydata$lon,
destfile = 'mymap_point.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
win.graph();
jpeg(filename = "mypoint.jpg", width = 1000, height = 1000, quality = 100)
mydata <-data.frame(
a=c(1:5),
lot=c(37.515083,37.525013,37.535023,37.545033,37.555043),
lon=c(127.055952,127.045942,127.035932,127.025922,127.015912)
)
p<-PlotOnStaticMap(mymap,
lat= mydata$lot,
lon= mydata$lon,
destfile = 'mymap_point.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
data.frame('seoul.excel')
raw_welfare <- read.csv(file = "seoul.csv", header=TRUE, sep = '\t')
library(readxl)
raw_welfare <- read.csv(file = "seoul.csv", header=TRUE, sep = '\t')
library(readxl)
# 데이터 불러오기
raw_welfare <- read.csv(file = "seoul.csv", header=TRUE, sep = '\t')
# 데이터 불러오기
raw_welfare <- read.csv(file = "seoul.csv", header=TRUE, sep = '\t')
raw_welfare
library(dplyr)
raw_welfare <- read.csv(file = "seoul.csv", header=TRUE, sep = ',')
raw_welfare$com=='KT'
raw_welfare[raw_welfare$com=='KT',]
raw_welfare[raw_welfare$com=='KT',]
p<-PlotOnStaticMap(mymap,
lat= mydata$lot,
lon= mydata$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
raw_welfare[raw_welfare$com=='KT',]
jpeg(filename = "wifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfare$lot,
lon= raw_welfare$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
raw_welfareKT<-  raw_welfare[raw_welfare$com=='KT',]
raw_welfareKT<-  raw_welfare[raw_welfare$com=='KT',]
jpeg(filename = "KTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareKT$lat,
lon= raw_welfareKT$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
raw_welfareLG<- raw_welfare[raw_welfare$com=='LGU+',]
jpeg(filename = "KTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareLG$lat,
lon= raw_welfareLG$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
raw_welfareLG<- raw_welfare[raw_welfare$com=='LGU+',]
jpeg(filename = "LGwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareLG$lat,
lon= raw_welfareLG$lon,
destfile = 'LGwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
raw_welfareKT<-  raw_welfare[raw_welfare$com=='KT',]
jpeg(filename = "KTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareKT$lat,
lon= raw_welfareKT$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
raw_welfareSKT<- raw_welfare[raw_welfare$com=='SKT',]
jpeg(filename = "SKTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareSKT$lat,
lon= raw_welfareSKT$lon,
destfile = 'SKTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
raw_welfareKT<-  raw_welfare[raw_welfare$com=='KT',]
jpeg(filename = "KTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareKT$lat,
lon= raw_welfareKT$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
wifi(1)
wifi <-function(a){
if(a==1){
raw_welfareKT<-  raw_welfare[raw_welfare$com=='KT',]
jpeg(filename = "KTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareKT$lat,
lon= raw_welfareKT$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
}else if(a==2){
raw_welfareLG<- raw_welfare[raw_welfare$com=='LGU+',]
jpeg(filename = "LGwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareLG$lat,
lon= raw_welfareLG$lon,
destfile = 'LGwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
}else if(a==3){
raw_welfareSKT<- raw_welfare[raw_welfare$com=='SKT',]
jpeg(filename = "SKTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareSKT$lat,
lon= raw_welfareSKT$lon,
destfile = 'SKTwifi.jpg',
cex=1, pch=10,col='red'
)
print(p)
dev.off()
}
}
wifi(1)
wifi <-function(a){
if(a==1){
raw_welfareKT<-  raw_welfare[raw_welfare$com=='KT',]
jpeg(filename = "KTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareKT$lat,
lon= raw_welfareKT$lon,
destfile = 'KTwifi.jpg',
cex=1, pch=10,col='red'
)
}else if(a==2){
raw_welfareLG<- raw_welfare[raw_welfare$com=='LGU+',]
jpeg(filename = "LGwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareLG$lat,
lon= raw_welfareLG$lon,
destfile = 'LGwifi.jpg',
cex=1, pch=10,col='red'
)
}else if(a==3){
raw_welfareSKT<- raw_welfare[raw_welfare$com=='SKT',]
jpeg(filename = "SKTwifi.jpg", width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareSKT$lat,
lon= raw_welfareSKT$lon,
destfile = 'SKTwifi.jpg',
cex=1, pch=10,col='red'
)
}
print(p)
dev.off()
}
wifi(1)
wifi <-function(a){
if(a==1){
com<-'KT'
jpg_name<-"KTwifi.jpg"
}else if(a==2){
com<-'LGU+'
jpg_name<-"LGwifi.jpg"
}else if(a==3){
com<-'SKT'
jpg_name<-"SKTwifi.jpg"
}
raw_welfareLG<- raw_welfare[raw_welfare$com==com,]
jpeg(filename = jpg_name, width = 1000, height = 1000, quality = 100)
p<-PlotOnStaticMap(mymap,
lat= raw_welfareLG$lat,
lon= raw_welfareLG$lon,
cex=1, pch=10,col='red'
)
print(p)
dev.off()
}
wifi(1)
wifi(1)
wifi(2)
wifi(3)
